apiVersion: apps/v1
kind: Deployment
metadata:
  name: getshort
  labels:
    app: getshort
spec:
  replicas: 2
  selector:
    matchLabels:
      app: getshort
  template:
    metadata:
      labels:
        app: getshort
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/path: "/metrics"
        prometheus.io/port: "8000"
    spec:
      containers:
      - name: getshort
        image: ghcr.io/shakatagaNai/getshort2:latest
        ports:
        - containerPort: 8000
        env:
        - name: PORT
          value: "8000"
        - name: SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: getshort-secrets
              key: secret-key
        - name: DB_TYPE
          value: mysql
        - name: DB_USER
          valueFrom:
            secretKeyRef:
              name: getshort-secrets
              key: db-user
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: getshort-secrets
              key: db-password
        - name: DB_HOST
          value: mariadb-service
        - name: DB_NAME
          value: getshort
        - name: GITHUB_CLIENT_ID
          valueFrom:
            secretKeyRef:
              name: getshort-secrets
              key: github-client-id
        - name: GITHUB_CLIENT_SECRET
          valueFrom:
            secretKeyRef:
              name: getshort-secrets
              key: github-client-secret
        - name: GEOIP_DB_PATH
          value: "/app/GeoLite2-City.mmdb"
        resources:
          limits:
            memory: "256Mi"
            cpu: "300m"
          requests:
            memory: "128Mi"
            cpu: "100m"
        volumeMounts:
        - name: geoip-db
          mountPath: /app/GeoLite2-City.mmdb
          subPath: GeoLite2-City.mmdb
        # Liveness probe - checks if the application is running
        livenessProbe:
          httpGet:
            path: /health/live
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        # Readiness probe - checks if the application is ready to receive traffic
        readinessProbe:
          httpGet:
            path: /health/ready
            port: 8000
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 2
          failureThreshold: 3
          successThreshold: 1
        # Startup probe - gives the application time to start up
        startupProbe:
          httpGet:
            path: /health/live
            port: 8000
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 2
          failureThreshold: 12  # Allow 1 minute (12 * 5s) for startup
      volumes:
      - name: geoip-db
        configMap:
          name: geoip-db